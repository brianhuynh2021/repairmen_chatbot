# .github/workflows/backend.yml
name: Backend CI (no Railway)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write   # needed if you keep GHCR push

env:
  PYTHON_VERSION: "3.13"
  IMAGE_NAME: ghcr.io/${{ github.repository }}/repairmen-chatbot

jobs:
  check-secrets:
    name: Check secrets
    runs-on: ubuntu-latest
    outputs:
      has_openai_key: ${{ steps.keys.outputs.has_openai_key }}
    steps:
      - id: keys
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          if [ -n "$OPENAI_API_KEY" ]; then echo "has_openai_key=true" >> "$GITHUB_OUTPUT"; else echo "has_openai_key=false" >> "$GITHUB_OUTPUT"; fi

  build:
    name: Install deps
    runs-on: ubuntu-latest
    needs: check-secrets
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  test:
    name: Run tests (only if OPENAI_API_KEY provided)
    runs-on: ubuntu-latest
    needs: [build, check-secrets]
    if: needs.check-secrets.outputs.has_openai_key == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Prepare DB env (SQLite file for CI)
        run: |
          echo "DATABASE_URL=sqlite+aiosqlite:///./repairmen_test.db" >> $GITHUB_ENV
          echo "ALEMBIC_DATABASE_URL=sqlite:///./repairmen_test.db"   >> $GITHUB_ENV
          echo "ENV=local" >> $GITHUB_ENV
      - name: Run Alembic migrations
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
          ALEMBIC_DATABASE_URL: ${{ env.ALEMBIC_DATABASE_URL }}
        run: |
          PYTHONPATH=. alembic upgrade head
      - name: Run pytest
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: pytest -q

  # Optional: giữ lại build & push image lên GHCR
  docker:
    name: Build & Push Docker (GHCR)
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=raw,value=latest
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}